package toppanmerrill.oracle.apps.xxtm.cb.invoicestyle.server;

import oracle.apps.fnd.framework.server.OAViewRowImpl;

import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SearchInvoiceStyleVORowImpl extends OAViewRowImpl {
    public static final int INVOICESTYLEID = 0;
    public static final int INVOICESTYLENAME = 1;
    public static final int LANGUAGE = 2;
    public static final int INACTIVEDATE = 3;
    public static final int STATUS = 4;

    /**This is the default constructor (do not remove)
     */
    public SearchInvoiceStyleVORowImpl() {
    }

    /**Gets InvoiceStyleEO entity object.
     */
    public InvoiceStyleEOImpl getInvoiceStyleEO() {
        return (InvoiceStyleEOImpl)getEntity(0);
    }

    /**Gets the attribute value for INVOICE_STYLE_ID using the alias name InvoiceStyleId
     */
    public Number getInvoiceStyleId() {
        return (Number) getAttributeInternal(INVOICESTYLEID);
    }

    /**Sets <code>value</code> as attribute value for INVOICE_STYLE_ID using the alias name InvoiceStyleId
     */
    public void setInvoiceStyleId(Number value) {
        setAttributeInternal(INVOICESTYLEID, value);
    }

    /**Gets the attribute value for INVOICE_STYLE_NAME using the alias name InvoiceStyleName
     */
    public String getInvoiceStyleName() {
        return (String) getAttributeInternal(INVOICESTYLENAME);
    }

    /**Sets <code>value</code> as attribute value for INVOICE_STYLE_NAME using the alias name InvoiceStyleName
     */
    public void setInvoiceStyleName(String value) {
        setAttributeInternal(INVOICESTYLENAME, value);
    }

    /**Gets the attribute value for LANGUAGE using the alias name Language
     */
    public String getLanguage() {
        return (String) getAttributeInternal(LANGUAGE);
    }

    /**Sets <code>value</code> as attribute value for LANGUAGE using the alias name Language
     */
    public void setLanguage(String value) {
        setAttributeInternal(LANGUAGE, value);
    }

    /**Gets the attribute value for the calculated attribute InactiveDate
     */
    public Date getInactiveDate() {
        return (Date) getAttributeInternal(INACTIVEDATE);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute InactiveDate
     */
    public void setInactiveDate(Date value) {
        setAttributeInternal(INACTIVEDATE, value);
    }

    /**Gets the attribute value for the calculated attribute Status
     */
    public String getStatus() {
        return (String) getAttributeInternal(STATUS);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Status
     */
    public void setStatus(String value) {
        setAttributeInternal(STATUS, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case INVOICESTYLEID:
            return getInvoiceStyleId();
        case INVOICESTYLENAME:
            return getInvoiceStyleName();
        case LANGUAGE:
            return getLanguage();
        case INACTIVEDATE:
            return getInactiveDate();
        case STATUS:
            return getStatus();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }
}
